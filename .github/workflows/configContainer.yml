name: Create Container, Upload Config File
on:
  workflow_dispatch:

jobs:
  exec:
    name: Create Container, Upload Config File
    runs-on: ubuntu-latest
    continue-on-error: false
    environment: "dev"
    env:
      NO_PROXY: .file.core.windows.net,.vault.azure.net,.blob.core.windows.net,.dfs.core.windows.net,.dev.azuresynapse.net,.sql.azuresynapse.net,registry.npmjs.org,www.powershellgallery.com

    steps:
      # Checkout repository
      - name: Check Out Repository
        id: checkout_repository
        uses: actions/checkout@v3

      # Install Python (for reading YAML)
      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Install PyYAML (Python library for parsing YAML)
      - name: Install PyYAML
        run: |
          python -m pip install pyyaml

      # Parse Config YAML and Set Environment Variables
      - name: Parse Config YAML
        id: parse_config
        run: |
          import yaml
          with open('config/configyml.yml', 'r') as f:
              config = yaml.safe_load(f)
          for key, value in config.items():
              print(f"::set-env name={key}::{value}")
        shell: python

      # Login to Azure
      - name: Azure Login
        id: azure_login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Show proxy settings in ENV
      - name: Show proxy settings in ENV
        run: |
          echo $HTTP_PROXY
          echo $HTTPS_PROXY
          echo $NO_PROXY

      # Create Container and Upload CSV using Azure CLI
      - name: Create Container and Upload CSV
        shell: bash
        run: |
          # Define variables
          storageAccountName=$storageAccountName
          containerName=$containerName
          #directoryName="teamsalertconfig"
          filePath=$filePath
          blobName=$blobName
       
     
          # Upload the CSV file using service principal authentication
          az storage blob upload --account-name $storageAccountName --auth-mode login --container-name $containerName --name $blobName --file $filePath --overwrite

          echo "Config File uploaded successfully to Azure Storage!"
