name: grimfuncTemplate

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        default: "dev"
        description: "Specifies the environment of the deployment."
      function_directory:
        required: true
        default: "funcDeployment1"
        type: string
        description: "Specifies the directory of the Azure Function."
      function_name:
        required: true
        default: "testpostteamsgitGrimGit"
        type: string
        description: "Name of the function"
      function_rgp:
        required: true
        default: "lineagempguk"
        type: string
        description: "Name of the RGP"
    #secrets:
     # SP_TENANTID:
      #  required: true
       # description: "Specifies the tenant id of the deployment."
      #SP_CLIENTID:
      #  required: true
      #  description: "Specifies the client id."
      #SP_SECRET:
      #  required: true
      #  description: "Specifies the client secret."
      #SUBSCRIPTIONID:
      #  required: true
      #  description: "Specifies the Subscription id."


jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Function App Deploy
    environment: ${{ inputs.environment }}
    continue-on-error: false

    steps:
      # Check Out Repository
      - name: Check Out Repository
        id: checkout_repository
        uses: actions/checkout@v4

        # Step 2: Login to Azure
      - name: Azure Login
        id: azure_login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Set Function App Settings
      #- name: Set Function App Settings
      #  id: set_app_settings
      #  run: |  

      #       az functionapp config appsettings set --name "testpostteamsgitGrimGit" --resource-group "lineagempguk" --settings "STORAGE_ACCOUNT_NAME=lineagempgukgits" "CONTAINER=lineagempgukfilegitc" 

      #       az functionapp config appsettings set --name ${{ inputs.function_name }} --resource-group "lineagempguk" --settings "BUILD_FLAGS=UseExpressBuild" "SCM_DO_BUILD_DURING_DEPLOYMENT=1" "ENABLE_ORYX_BUILD=true" "STORAGE_ACCOUNT_NAME=lineagempguk" "CONTAINER=lineagempgukfile" 

      #      az functionapp config appsettings set --name ${{ inputs.function_name }} --resource-group ${{ inputs.function_rgp }} --settings "BUILD_FLAGS=UseExpressBuild" "SCM_DO_BUILD_DURING_DEPLOYMENT=1" "ENABLE_ORYX_BUILD=true" "CLAIMS_KAFKA_BROKER=${{ secrets.CLAIMS_BROKER }}" "CLAIMS_KAFKA_APIKEY=${{ secrets.CLAIMS_EBS_KEY }}" "CLAIMS_KAFKA_API_SECRET=${{ secrets.CLAIMS_EBS_SECRET }}" "CLAIMS_KAFKA_GROUPID=${{ secrets.CLAIMS_CONSUMER_GROUP }}" "STORAGE_ACCOUNT_NAME=${{ secrets.STORAGE_ACCOUNT_NAME }}" "CONTAINER=${{ secrets.CONTAINER }}" "GLOBI_KAFKA_BROKER=${{ secrets.GLOBI_BROKER }}" "GLOBI_KAFKA_APIKEY=${{ secrets.GLOBI_EBS_KEY }}" "GLOBI_KAFKA_API_SECRET=${{ secrets.GLOBI_EBS_SECRET }}" "GLOBI_KAFKA_GROUPID=${{ secrets.GLOBI_CONSUMER_GROUP }}"
      - name: Debug Function Directory
        run: |
         echo "Workspace: $GITHUB_WORKSPACE"
         echo "Function Directory: ${{ inputs.function_directory }}"
         ls -la $GITHUB_WORKSPACE/${{ inputs.function_directory }}

      # Deploy Function
      - name: Deploy Function
        id: function_deploy
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ inputs.function_name }}
          package: ${{ github.workspace }}/${{ inputs.function_directory }}
          #scm-do-build-during-deployment: true
          #enable-oryx-build: true
          #remote-build: true
