
name: Azure Function Deploy for pipeline failure teams messages
on:
   workflow_dispatch: # Allows manual trigger of the workflow
    inputs:
      environment:
        description: 'Target environment (e.g., dev, staging, prod)'
        required: true
        default: 'dev'

env:
  AZURE_LOCATION: eastus
  AZURE_RUNTIME: node
  AZURE_RUNTIME_VERSION: 22
  AZURE_FUNCTIONS_VERSION: 4

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:    
    
      # Checkout repository
      - name: Check Out Repository
        id: checkout_repository
        uses: actions/checkout@v3

      # Step 2: Set up Azure CLI
      - name: Set up Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      #- name: Install Az Module
      #  run: |
      #   Install-Module -Name Az -AllowClobber -Scope CurrentUser -Force
      #   Import-Module Az
      #  shell: pwsh

      # Step 3: Deploy Azure Function App and HTTP Trigger
      - name: Deploy Azure Function App
        shell: bash
        run: |
          # Define environment-specific variables
          environment="${{ github.event.inputs.environment }}"
          resourceGroup="lineagempg"
          resourceGroup1="lineagempg"
          functionAppName="testpostteamsgit"
          functionName="testpostteamsgitcode"
          storageAccountName="testpostteamsstoresgit"
          appServicePlan="ASP-lineagempg-a4e0"
          
          # Create the storage account if it doesn't exist
          echo "Creating or updating Function App: $functionAppName"
          az storage account create --name $storageAccountName --location ${{ env.AZURE_LOCATION }} --resource-group $resourceGroup --sku Standard_LRS

           # Create the Function App if it doesn't exist
           az functionapp create --resource-group $resourceGroup --consumption-plan-location ${{ env.AZURE_LOCATION }} \
              --runtime ${{ env.AZURE_RUNTIME }} --runtime-version ${{ env.AZURE_RUNTIME_VERSION }} \
              --functions-version ${{ env.AZURE_FUNCTIONS_VERSION }} --name $functionAppName \
              --storage-account $storageAccountName 
            
# Zip the Azure func folder
      - name: Zip the Azure func folder        
        run: |
          #cd ./AZfuncDeploy
          #ls -ld ./AZfuncDeploy
          #ls -ld ../AZfuncDeploy
          zip -r ./funcDeployment/postTeamsMsg.zip ./*

      - name: Show proxy settings in ENV 
        run: |
            echo $resourceGroup
            echo $functionAppName
       


      # Build and Deploy to Azure
      - name: Build and Deploy to Azure        
        run: |
          az functionapp deployment source config-zip --resource-group $resourceGroup1 --name  $functionName --src "./funcDeployment/postTeamsMsg.zip"
         
            


             
             
